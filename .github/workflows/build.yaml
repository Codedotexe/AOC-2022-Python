name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-return flake8-docstrings setuptools build coverage
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics --max-line-length=120 --docstring-convention=google --ignore=D415,D205,D401,D212,D403,W191,W293,E101,E117,E275
          flake8 tests --count --select=E9,F63,F7,F82 --show-source --statistics --max-line-length=120 --docstring-convention=google --ignore=D415,D205,D401,D212,D403,W191,W293,E101,E117,E275

          # exit-zero treats all errors as warnings
          flake8 src --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --docstring-convention=google --ignore=D415,D205,D401,D212,D403,W191,W293,E101,E117,E275
          flake8 tests --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics --docstring-convention=google --ignore=D415,D205,D401,D212,D403,W191,W293,E101,E117,E275
      - name: Build package
        run: python -m build
      - name: Run unittests
        run: |
          coverage run -m unittest discover -s src
          coverage report -m
